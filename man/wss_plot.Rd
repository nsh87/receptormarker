% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_plotting.R
\name{wss_plot}
\alias{wss_plot}
\title{Plot of total within sum of squares for numbers of clusters}
\usage{
wss_plot(clust_obj, optimal = FALSE, ...)
}
\arguments{
\item{clust_obj}{A \code{multiClust} object from which to extract
\code{wss}.}

\item{optimal}{Logical. If \code{TRUE}, the optimal number of clusters as
extracted from \code{clust_obj}, based on average silhouette width, is
circled in the plot.}

\item{...}{Further arguments to be passed to the \code{\link{plot}} 
function (besides \code{xlab}, \code{ylab}, \code{main}).}
}
\description{
This function plots within sum of squares. It provides a wrapper on 
\code{\link[graphics]{plot}} by extracting \code{wss} from \code{clust_obj}
and plotting it.
}
\details{
This function is intended to be used as part of deciding the ideal
  number of clusters to use for analysis. Within sum of squares (WSS) tells
  one how tightly the data points within a cluster are clustered. Typically,
  one looks for an "elbow" at which the WSS drops significantly. Sometimes,
  the elbow in the WSS still does not contain enough clusters to understand
  the data well. This is where other visualizations can be useful.  
  Choosing \code{optimal = TRUE} will circle the optimal number of clusters
  based on average silhouette width. See the \emph{Details} section for the
  \code{\link{multi_clust}} function and view the \emph{TIP} for a suggested
  workflow.
}
\examples{
# First, create a multiClust object
library(datasets)
iris_cluster <- multi_clust(iris[, 1:4])
# Second, use object with wss_plot
wss_plot(iris_cluster, optimal = TRUE)
}
\seealso{
\code{\link{multi_clust}}, \code{\link{gap_plot}}, 
  \code{\link{pca_plot}}, \code{\link{sil_plot}}, \code{\link{avg_sil_plot}},
  \code{\link{clust_boxplot}}
}

